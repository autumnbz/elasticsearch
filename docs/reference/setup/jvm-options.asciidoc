[[jvm-options]]
=== 设置 JVM 参数

你应该很少需要更改 Java 虚拟机（JVM）选项。 如果你这样做，最有可能的变化是设置 <<heap-size,堆大小>>。本文档详细介绍了如何设置 JVM 选项。

设置 JVM 选项（包括系统属性和 JVM 标志）的首选方法是通过 `jvm.options` 配置文件。该文件默认位置是 `config/jvm.options` （tar 或 zip 版本安装方式）
和 `/etc/elasticsearch/jvm.options` （Debian 或 RPM 包安装方式）。

该文件包含横线分隔的特殊 JVM 参数列表语法：

* 仅包含空白的行将被忽略
* 以 `#` 开始的行视为注释并被忽略
+
[source,text]
-------------------------------------
# this is a comment
-------------------------------------

* 以 `-` 开始的行视为适用于独立 JVM 版本选项
+
[source,text]
-------------------------------------
-Xmx2g
-------------------------------------

* 数字后跟着 `:` 和 `-` 视为适用于匹配该数值的 JVM 版本选项。
+
[source,text]
-------------------------------------
8:-Xmx2g
-------------------------------------

* 数字后跟着 `-` 和 `:` 视为适用于不低于该数值的 JVM 版本选项。
+
[source,text]
-------------------------------------
8-:-Xmx2g
-------------------------------------

* 数字后跟着 `-` 再跟着数字视为只适用于该俩数值间的 JVM 版本选项。
+
[source,text]
-------------------------------------
8-9:-Xmx2g
-------------------------------------

* 所有其他行都会被拒绝

你可以将自定义 JVM 标识添加到该文件，并在版本控制系统里检查该配置。

另一种设置 Java 虚拟机选项的方式是使用 `ES_JAVA_OPTS` 环境变量。例如：

[source,sh]
---------------------------------
export ES_JAVA_OPTS="$ES_JAVA_OPTS -Djava.io.tmpdir=/path/to/temp/dir"
./bin/elasticsearch
---------------------------------

当使用 RPM 或 Debian 包时， `ES_JAVA_OPTS` 可从
<<sysconfig,system configuration file>> 指定。

JVM 具有观察 `JAVA_TOOL_OPTIONS` 环境变量的内置机制。 我们在打包脚本中故意忽略这个环境变量。主要原因是在某些操作系统上（例如 Ubuntu），
我们不想通过干涉 Elasticsearch 环境变量安装默认代理。

另外，还有一些其他 Java 程序支持 `JAVA_OPTS` 环境变量。这 *不是* JVM 内置的机制，而是一种生态约定。 然而，我们不支持这个环境变量，
而支持通过 `jvm.options` 文件或上文提及的 `ES_JAVA_OPTS` 环境变量设置 JVM 选项。
