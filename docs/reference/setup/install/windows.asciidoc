[[windows]]
=== 使用 Windows MSI Installer 安装 Elasticsearch

beta[]

Windows 可用 `.msi` 包安装 Elasticsearch。可将 Elasticsearch 安装为 Windows 服务或以 `elasticsearch.exe` 手动执行。

TIP: 可使用 <<zip-windows, .zip>> 在 Windows 上安装 Elasticsearch。如果你愿意，你可以继续使用 `.zip` 方法。

最新的稳定版本可以在
link:/downloads/elasticsearch[Download Elasticsearch] 找到。
其他版本可以在
link:/downloads/past-releases[Past Releases page] 找到。

NOTE: Elasticsearch 最低要求 Java 8。使用
http://www.oracle.com/technetwork/java/javase/downloads/index.html[official Oracle distribution]
或者开源版本 http://openjdk.java.net[OpenJDK]。

[[download-msi]]
==== 下载 `.msi` 包

ifeval::["{release-state}"=="unreleased"]

Elasticsearch Version {version} 暂未发布。

endif::[]

ifeval::["{release-state}"!="unreleased"]

Elasticsearch v{version}  的 `.msi` 包可从此获取：https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.msi

endif::[]

[[install-msi-gui]]
==== 使用图形用户界面进行安装 (GUI)

双击下载的 `.msi` 包启动 GUI 向导，该向导将指导你完成安装过程。你可以通过点击在面板上每个输入的附加 `？` 按钮来查看每步的帮助：


[[msi-installer-help]]
image::images/msi_installer/msi_installer_help.png[]

在第屏中选择安装目录。 另外还可选择数据、日志和配置目录，或者<<msi-command-line-options,使用默认位置>>：

[[msi-installer-locations]]
image::images/msi_installer/msi_installer_locations.png[]

接下来选择是作为服务安装还是根据需要手动启动 Elasticsearch。 服务安装时你还可以决定以哪个帐户运行服务和
是否当 Windows 启动或重启时重启服务：

[[msi-installer-service]]
image::images/msi_installer/msi_installer_service.png[]

IMPORTANT: 当选择一个帐户运行服务时，请确保所选帐户具有足够的权限来访问选择的安装和其部署目录。

通用配置设置是暴露在配置部分中，允许设置集群名称、节点名称和角色，以及内存和网络设置：

[[msi-installer-configuration]]
image::images/msi_installer/msi_installer_configuration.png[]

可通过下载时 HTTPS 代理配置选项选择下载安装常用插件：

[[msi-installer-selected-plugins]]
image::images/msi_installer/msi_installer_selected_plugins.png[]


选择安装 X-Pack 插件后，可通过另一个步骤来选择 X-Pack 版本类型，X-Pack 安全配置和内置用户配置除外：

[[msi-installer-xpack]]
image::images/msi_installer/msi_installer_xpack.png[]

NOTE: X-Pack 可选择试用 30 天 Trial 或 Basic 版本。30天之后你可选
 https://www.elastic.co/subscriptions[available subscriptions] 或 {ref}/security-settings.html[disable Security] 之一。
Basic 版本是免费的，并包括 https://www.elastic.co/products/x-pack/monitoring[Monitoring]。

点击安装按钮开始安装：

[[msi-installer-installing]]
image::images/msi_installer/msi_installer_installing.png[]

并会显示何时成功：

[[msi-installer-success]]
image::images/msi_installer/msi_installer_success.png[]

[[install-msi-command-line]]
==== 命令行安装

`.msi` 可以使用命令行方式安装 Elasticsearch。使用与 GUI 相同的默认设置最简单的安装方式是首先导航到下载目录，然后运行：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
msiexec.exe /i elasticsearch-{version}.msi /qn
--------------------------------------------

默认情况下，msiexec 不等待安装过程完成，因为它运行于 Windows 子系统。为了等待进程完成并保证 `%ERRORLEVEL%` 正确设置，
建议使用 `start /wait` 创建一个进程并等待它退出。

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /i elasticsearch-{version}.msi /qn
--------------------------------------------

与任何 MSI 安装包一样，可以在 `%TEMP%` 目录找到安装过程的日志文件，该文件是一个随机生成的 `MSI<random>.LOG` 格式名称。
可以使用 `/l` 命令参数提供日志文件的路径。

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /i elasticsearch-{version}.msi /qn /l install.log
--------------------------------------------

支持的 Windows 命令行参数可用以下方式查看：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
msiexec.exe /help
--------------------------------------------

或者参考 https://msdn.microsoft.com/en-us/library/windows/desktop/aa367988(v=vs.85).aspx[Windows Installer SDK Command-Line Options]。

[[msi-command-line-options]]
==== 命令行选项

在 GUI 中公开的所有设置都可作为命令行参数使用（参考
作为 Windows 安装文档中的 _properties_）可以传递给 msiexec：

[horizontal]
`INSTALLDIR`::

  安装目录。路径最终目录 **必须** 是 Elasticsearch 版本。
  默认 ++%ProgramW6432%\Elastic\Elasticsearch{backslash}{version}++.

`DATADIRECTORY`::

  数据存放目录。
  默认 `%ALLUSERSPROFILE%\Elastic\Elasticsearch\data`

`CONFIGDIRECTORY`::

  配置存放目录。
  默认 `%ALLUSERSPROFILE%\Elastic\Elasticsearch\config`

`LOGSDIRECTORY`::

  日志存放目录。
  默认 `%ALLUSERSPROFILE%\Elastic\Elasticsearch\logs`

`PLACEWRITABLELOCATIONSINSAMEPATH`::

  数据、配置和日志目录是否在安装目录下创建。默认为 `false`

`INSTALLASSERVICE`::

  Elasticsearch 是否安装配置为 Windows 服务。
  默认为 `true`

`STARTAFTERINSTALL`::

  安装后是否启动 Windows 服务。
  默认为 `true`

`STARTWHENWINDOWSSTARTS`::

  Windows 启动时是否启动 Elasticsearch Windows 服务。
  默认为 `true`

`USELOCALSYSTEM`::

  是否在 LocalSystem  帐户下运行 Elasticsearch Windows 服务。
  默认为 `true`

`USENETWORKSERVICE`::

  是否在 NetworkService 帐户下运行 Elasticsearch Windows 服务。默认为 `false`

`USEEXISTINGUSER`::

  是否在指定已存在帐户下运行 Elasticsearch Windows 服务。默认为 `false`

`USER`::

  用于运行 Windows 服务帐户用户名。默认为 `""`

`PASSWORD`::

  用于运行 Windows 服务帐户用户密码。默认为 `""`

`CLUSTERNAME`::

  集群名。默认为 `elasticsearch`

`NODENAME`::

  节点名。默认为 `%COMPUTERNAME%`

`MASTERNODE`::

  Elasticsearch 是否配置为主节点。默认为 `true`

`DATANODE`::

  Elasticsearch 是否配置为数据节点。默认为 `true`

`INGESTNODE`::

  Elasticsearch 是否配置为摄取节点。默认为 `true`

`SELECTEDMEMORY`::

  为 Elasticsearch 分配的 JVM 堆内存大小。默认是 `2048` ，如果机器内存小于 4GB 则为总内存的 50%。

`LOCKMEMORY`::

  是否应用 `bootstrap.memory_lock` 锁定进程地址空间到 RAM 中。默认为 `false`

`UNICASTNODES`::

  用于单播发现的主机列表，在 `host:port` 或 `host` 中以逗号分隔。默认为 `""`


`MINIMUMMASTERNODES`::

  形成集群的最小主选举节点数。默认为 `""`

`NETWORKHOST`::

  将节点绑定到集群中的其他节点并 _publish_ （advertise） 的主机名或 IP 地址。默认为 `""`

`HTTPPORT`::

  在 HTTP 上暴露 APIs 的端口。默认为 `9200`

`TRANSPORTPORT`::

  集群内部节点之间的通信端口。默认为 `9300`

`PLUGINS`::

  逗号分隔的插件列表，作为安装的一部分下载和安装。默认为 `""`

`HTTPSPROXYHOST`::

  通过 HTTPS 下载插件的代理主机。默认为 `""`

`HTTPSPROXYPORT`::

  通过 HTTPS 下载插件的代理端口。默认为 `443`

`HTTPPROXYHOST`::

  通过 HTTP 下载插件的代理主机。默认为 `""`

`HTTPPROXYPORT`::

  通过 HTTP 下载插件的代理端口。默认为 `80`

`XPACKLICENSE`::

  下载 X-Pack 插件时的 `Basic` 或 `Trial` 版本类型，默认为 `Basic`

`XPACKSECURITYENABLED`::

  下载 `Trial` 版本时是否允许 X-Pack Security。默认为 `true`

`BOOTSTRAPPASSWORD`::

  当安装允许 X-Pack Security 的 `Trial` 版本时，用于引导集群的密钥并持久化为 `bootstrap.password` 。默认为随机值。

`SKIPSETTINGPASSWORDS`::

  当安装允许 X-Pack Security 的 `Trial` 版本时，安装时是否跳过设置内置用户 `elastic` 、 `kibana` 和 `logstash_system` 。默认为 `false` 。

`ELASTICUSERPASSWORD`::

  当安装允许 X-Pack Security 的 `Trial` 版本时， 内置用户 `elastic` 的密码，默认为 `""`

`KIBANAUSERPASSWORD`::

  当安装允许 X-Pack Security 的 `Trial` 版本时， 内置用户 `kibana` 的密码，默认为 `""`

`LOGSTASHSYSTEMUSERPASSWORD`::

  当安装允许 X-Pack Security 的 `Trial` 版本时， 内置用户 `logstash_system` 的密码，默认为 `""`

为了传递一个值，只需在安装命令后附加 `<PROPERTYNAME>="<VALUE>"` 属性名和值。例如，使用与默认目录不同的目录安装 https://www.elastic.co/products/x-pack[X-Pack]：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /i elasticsearch-{version}.msi /qn INSTALLDIR="C:\Custom Install Directory" PLUGINS="x-pack"
--------------------------------------------

更多附加引导规则请参考 https://msdn.microsoft.com/en-us/library/windows/desktop/aa367988(v=vs.85).aspx[Windows Installer SDK Command-Line Options]。

[[msi-installer-command-line-running]]
==== 命令行运行 Elasticsearch

一旦安装完成，如果没有将 Elasticsearch 安装为服务或配置安装完成时启动，则可用命令行启动，命令如下：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
.\bin\elasticsearch.exe
--------------------------------------------

命令行终端内容类似如下展示：

[[msi-installer-elasticsearch-exe]]
image::images/msi_installer/elasticsearch_exe.png[]

默认情况，Elasticsearch 是前台运行的，将日志打印到 `STDOUT` ，`<cluster name>.log` 文件内的 `LOGSDIRECTORY` 除外，并且可以通过 `Ctrl-C`停止。

[[msi-installer-command-line-configuration]]
==== 命令行配置 Elasticsearch

Elasticsearch默认从 `$ES_HOME/config/elasticsearch.yml` 加载配置。配置的具体解释见 <<settings>>。

任何可在配置文件中指定的设置都可在命令行指定，使用 `-E` 语法如下：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
.\bin\elasticsearch.exe -E cluster.name=my_cluster -E node.name=node_1
--------------------------------------------

NOTE: 包含空格的值必须用引号括起来。例如 `-Epath.logs="C:\My Logs\logs"` 。

TIP: 通常情况，任何集群级的设置（例如 `cluster.name`）应该在 `elasticsearch.yml` 添加，而类似 `node.name` 节点级的设置可以用命令行指定。

include::check-running.asciidoc[]

[[msi-installer-windows-service]]
==== 安装 Elasticsearch 作为 Windows 服务

Elasticsearch 可作为后台服务运行而无需与用户交互。这可以在安装过程中使用以下命令行选项实现

* `INSTALLASSERVICE=true`
* `STARTAFTERINSTALL=true`
* `STARTWHENWINDOWSSTARTS=true`

一旦安装完成，Elasticsearch 将出现在服务控制面板中：

[[msi-installer-installed-service]]
image::images/msi_installer/msi_installer_installed_service.png[]

并可在控制面板中停止和重启，或者使用命令行：

命令提示符方式:

[source,sh]
--------------------------------------------
sc.exe stop Elasticsearch
sc.exe start Elasticsearch
--------------------------------------------

PowerShell 方式:

[source,powershell]
--------------------------------------------
Get-Service Elasticsearch | Stop-Service | Start-Service
--------------------------------------------

安装完成后可对 jvm.options 和 elasticsearch.yml 大多数更改（例如 JVM 设置）将的配置需要重启服务才能生效。

[[upgrade-msi-gui]]
==== 图形用户界面进行升级 (GUI)

`.msi` 包支持将已安装的 Elasticsearch 版本升级到更新版本。通过 GUI 升级过程将升级
安装所有插件，同时保留你的数据和配置。

下载并点击更新的版本的 `.msi` 包将启动 GUI 向导。第一步将从已安装版本列出只读属性:

[[msi-installer-upgrade-notice]]
image::images/msi_installer/msi_installer_upgrade_notice.png[]

下面的配置步骤允许更改某些配置选项：

[[msi-installer-upgrade-configuration]]
image::images/msi_installer/msi_installer_upgrade_configuration.png[]

最后，插件步骤允许升级或删除当前安装的插件，对于未安装的插件则要下载安装：

[[msi-installer-upgrade-plugins]]
image::images/msi_installer/msi_installer_upgrade_plugins.png[]

[[upgrade-msi-command-line]]
==== 命令行升级

`.msi` 支持使用命令行升级 Elasticsearch 版本。

[IMPORTANT]
===========================================
命令行升级需要传递首次安装时 **相同** 的命令行属性；Windows 安装程序并不记录这些属性。

例如，你最初以 `PLUGINS="x-pack"` 和 `LOCKMEMORY="true"` 安装，那你必须在执行升级命令行时传递相同值：

`INSTALLDIR` 是一个 **例外**（如果最初指定的话），它必须与当前安装目录不同。
如果设置 `INSTALLDIR` ，路径中的最终目录 **必须** 是 Elasticsearch 版本。

++C:\Program Files\Elastic\Elasticsearch{backslash}{version}++
===========================================

最简单的升级，假设 Elasticsearch 是在下载目录以默认方式安装的，那么运行：

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /i elasticsearch-{version}.msi /qn
--------------------------------------------

与安装过程类似，升级日志文件路径可使用 `/l` 命令行参数传递

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /i elasticsearch-{version}.msi /qn /l upgrade.log
--------------------------------------------

[[uninstall-msi-gui]]
==== Add/Remove 卸载

`.msi` 包可执行安装时添加的所有目录和文件的卸载。

卸载将删除 **所有**  目录和它们的安装内容，**包括数据目录中的数据**。如果你想在卸载时保留你的数据
，建议你在卸载之前复制数据目录。

MSI 安装包不提供卸载 GUI。通过按下 Windows 键并键入 `add or remove programs` 打开系统设置卸载已安装程序。

一旦打开，在已安装的应用程序列表中找到 Elasticsearch，单击并选择 `Uninstall` ：

[[msi-installer-uninstall]]
image::images/msi_installer/msi_installer_uninstall.png[]

这将启动卸载程序。

[[uninstall-msi-command-line]]
==== 命令行卸载

导航到 `.msi` 目录也可用命令行执行卸载，运行:

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /x elasticsearch-{version}.msi /qn
--------------------------------------------

与安装过程类似，卸载日志文件路径可使用 `/l` 命令行参数传递

["source","sh",subs="attributes,callouts"]
--------------------------------------------
start /wait msiexec.exe /x elasticsearch-{version}.msi /qn /l uninstall.log
--------------------------------------------

include::next-steps.asciidoc[]
