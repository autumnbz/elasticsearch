[[zip-targz]]
=== 使用 `.zip` 或 `.tar.gz` 安装 Elasticsearch

Elasticsearch 提供了 `.zip` 和 `.tar.gz` 安装包。
这些包适合在任何操作系统上安装，同时也是大多数系统入门 Elasticsearch 的最简单选择。

最新的稳定版本可以在
link:/downloads/elasticsearch[Download Elasticsearch] 找到。
其他版本可以在
link:/downloads/past-releases[Past Releases page] 找到。

NOTE: Elasticsearch 最低要求 Java 8。使用
http://www.oracle.com/technetwork/java/javase/downloads/index.html[official Oracle distribution]
或者开源版本 http://openjdk.java.net[OpenJDK]。

[[install-zip]]
==== 下载和安装 `.zip` 包

ifeval::["{release-state}"=="unreleased"]

Elasticsearch Version {version} 暂未发布。

endif::[]

ifeval::["{release-state}"!="unreleased"]

Elasticsearch v{version}  的 `.zip` 包可用以下方式获取安装：


["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.zip
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.zip.sha512
shasum -a 512 -c elasticsearch-{version}.zip.sha512 <1>
unzip elasticsearch-{version}.zip
cd elasticsearch-{version}/ <2>
--------------------------------------------
<1> 比较下载的 `.zip` 包的 SHA 和 发布校验和，应该输出
    `elasticsearch-{version}.zip: OK`。
<2> 这个目录便是 `$ES_HOME`。

endif::[]


[[install-targz]]
==== 下载安装 `.tar.gz`

ifeval::["{release-state}"=="unreleased"]

Elasticsearch Version {version} 暂未发布。

endif::[]

ifeval::["{release-state}"!="unreleased"]

Elasticsearch v{version}  的 `.tar.gz` 包可用以下方式获取安装：

["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.tar.gz
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.tar.gz.sha512
shasum -a 512 -c elasticsearch-{version}.tar.gz.sha512 <1>
tar -xzf elasticsearch-{version}.tar.gz
cd elasticsearch-{version}/ <2>
--------------------------------------------
<1> 比较下载的 `.tar.gz` 包的 SHA 和 发布校验和，应该输出
    `elasticsearch-{version}.tar.gz: OK`。
<2> 这个目录便是 `$ES_HOME`。

endif::[]

[[zip-targz-running]]
==== 使用命令行运行 Elasticsearch

Elasticsearch 用以下命令启动：

[source,sh]
--------------------------------------------
./bin/elasticsearch
--------------------------------------------

默认情况下 Elasticsearch 是前台运行的，将其日志打印到标准输出（`stdout`），并且可以通过 `Ctrl-C`停止。

NOTE: 与 Elasticsearch 打包在一起的所有脚本需要支持数组 Bash 版本并假设 Bash 在 `/bin/bash` 可用。
因此，Bash 应该可以在该路径上直接或链接使用。

include::check-running.asciidoc[]

可以在命令行使用 `-q` 或 `--quiet` 来禁用日志打印到 `stdout`。

[[setup-installation-daemon]]
==== 守护进程运行

要将 Elasticsearch 作为守护程序运行，请在命令行中指定 `-d`，并使用 `-p` 选项将进程 ID 记录到文件中：

[source,sh]
--------------------------------------------
./bin/elasticsearch -d -p pid
--------------------------------------------

日志信息可在 `$ES_HOME/logs/` 目录查看。

要关闭 Elasticsearch，请 kill 记录在 pid 文件中的进程 ID：

[source,sh]
--------------------------------------------
kill `cat pid`
--------------------------------------------

NOTE: <<rpm,RPM>> 和 <<deb,Debian>> 包中提供的启动脚本负责为你启动和停止 Elasticsearch。

[[zip-targz-configuring]]
==== 命令行配置 Elasticsearch

Elasticsearch 默认从 `$ES_HOME/config/elasticsearch.yml` 加载配置。配置的具体解释见 <<settings>>。

任何可在配置文件中指定的设置都可在命令行指定，使用 `-E` 语法如下：

[source,sh]
--------------------------------------------
./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1
--------------------------------------------

TIP: 通常情况，任何集群级的设置（例如 `cluster.name`）应该在 `elasticsearch.yml` 添加，而类似 `node.name` 节点级的设置可以用命令行指定。

[[zip-targz-layout]]
==== `.zip` 和 `.tar.gz` 目录结构

`.zip` 和 `.tar.gz` 包是一体的。所有文件和目录默认情况下在 `$ES_HOME` -- 解压时建立。

因为不需要建立任何目录来启动 Elasticsearch 所以十分方便，卸载 Elasticsearch 也只需要移除 `$ES_HOME` 目录。
然而，还是建议改变默认的 config、data 和 logs 目录位置以便在未来你不用删除重要数据。

[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| Type | Description | Default Location | Setting
| home
  | Elasticsearch 根目录或 `$ES_HOME`
 d| 解压时创建
  |

| bin
  | 二进制脚本，包括启动节点的 `elasticsearch` 和安装插件的
     `elasticsearch-plugin`
  | $ES_HOME/bin
 d|

| conf
  | 包含 `elasticsearch.yml` 的配置文件
  | $ES_HOME/config
  | <<config-files-location,ES_PATH_CONF>>

| data
  | 每个节点分配的 index / shard 数据文件。支持多路径。
  | $ES_HOME/data
  | path.data

| logs
  | Log 文件路径。
  | $ES_HOME/logs
  | path.logs

| plugins
  | Plugin 文件路径。每个插件都包含在一个子目录中。
  | $ES_HOME/plugins
  |

| repo
  | 共享文件系统库路径。支持多路径。一个文件系统库可以在此处指定的任何目录的任何子目录中。
  | path.repo

| script
  | script 文件路径。
  | $ES_HOME/scripts
  | path.scripts

|=======================================================================


include::next-steps.asciidoc[]
