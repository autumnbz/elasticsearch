[[breaking_60_search_changes]]
=== Search 和 Query DSL 改变

==== queries 改变

* `span_near` query 的 `collect_payloads` 参数已移除。负载将在需要时搜集。

* 布尔字段查询现在严格解析 boolean-like 值。这意味着只有 `"true"` 和 `"false"` 可被解析。其他字符串将抛出错误。

* `in` 查询（`terms` 查询同义词）已移除

* `geo_bbox` 查询 （`geo_bounding_box` 查询同义词）已移除

* `mlt` 查询（`more_like_this` 查询同义词）已移除

* `more_like_this` 查询弃用的 `like_text` 、 `ids` 和 `docs` 参数（`like` 同义词）已移除。
  已弃用的 `min_word_len` （`min_word_length` 同义词） 和 `max_word_len` （`max_word_length` 同义词）已移除。

* `fuzzy_match` 和 `match_fuzzy` 查询 （`match` 查询已移除）已移除

* `terms` 查询现在总算返回等于 `1` 的分数，同时不再受制于 `indices.query.bool.max_clause_count` 。

* 弃用的 `indices` 查询已移除。

* 支持空查询对象的 (`{ }`) 已从 query DSL 移除。
  无论何时空查询对象都将抛出错误。

* `bool` 查询中弃用的 `minimum_number_should_match` 参数已移除，请使用 `minimum_should_match` 替换。

* `query_string` 查询现在可以在 "https://en.wikipedia.org/wiki/Powerset_construction#Complexity[determinizing]"
  正则为 `max_determinized_states` 而不是 `max_determined_states` 时正确解析为允许的最大状态数。

* `query_string` 查询不再接收 `enable_position_increment` ，使用 `enable_position_increments` 替换。

* 对于 `geo_distance` 查询、排序和聚合， `sloppy_arc` 选项已从 `distance_type` 参数移除。

* 5.0 中已过期的 `geo_distance_range` 查询，现已移除。

* `optimize_bbox` 参数已从 `geo_distance` 查询移除。

* `ignore_malformed` 和 `coerce` 参数已从
  `geo_bounding_box` 、`geo_polygon` 和 `geo_distance` 查询移除。

* `bool` 和 `common_terms` 查询的 `disable_coord` 参数已移除。如果提供，它将被忽略并产生一个弃用警告。

* `template` 查询已移除。该查询从 5.0 起已弃用。

* `percolate` 查询的 `document_type` 已弃用。从 6.0 起不再需要指定 `document_type` 参数。

* `query_string` 查询的 `split_on_whitespace` 参数已移除。
  如果提供，这个参数将被忽略并产生一个过期警告。`query_string` 查询现在仅由操作符分割。

* `query_string` 查询的 `use_dis_max` 参数已移除。
  如果提供，这个参数将被忽略并产生一个过期警告。
  请务必使用 `tie_breaker` 参数替代。

* `query_string` 查询的 `auto_generate_phrase_queries` 参数已移除，请使用显式引用查询替代。
  如果提供，这个参数将被忽略并产生一个过期警告。

* `query_string` 和 `simple_query_string` 的 `all_fields` 参数已移除。
  设置 `default_field` 为 `*` 替换.
  如果提供，`default_field` 会自动设为 `*` 。

* 用于在特定索引中查找 terms 的 terms 过滤器中的 `index` 参数是强制性的。以前，索引默认为执行查询的索引。现在必须在请求中显式设置索引。

* `match` 查询的 `type` 和 `slop` 参数已移除。可以使用 `match_phrase` 或 `match_phrase_prefix` 替换设置 `type`。
  `match` 查询移除了 `slop` 但是支持 `match_phrase` 和 `match_phrase_prefix` 。

* `match_phrase` 查询弃用的 `phrase_slop` 参数（`slop` 参数的同义词）已移除。

* `constant_score` 查询弃用的 `query` 参数（`filter` 参数的同义词）已移除。

* `multi_match` 查询弃用的 `phrase_slop` 参数（`slop` 参数的同义词）已移除。

* `prefix` 查询弃用的 `prefix` 参数（`value` 参数的同义词）已移除。

* `range` 查询弃用的 `le` （`lte` 同义词) 和 `ge` （`gte` 同义词） 参数已移除。

* 弃用的多 term 重写参数 `constant_score_auto` 、 `constant_score_filter` （`constant_score` 同义词）已移除。

==== 搜索分片 API

搜索分片 API 不再接收 `type` url 参数，早期版本没有任何影响。

==== Profile API 改变

显示人类可读时间输出的 `"time"` 字段已被显示已过去纳秒时间的 `"time_in_nanos"` 字段替代。
`"time"` 字段可在请求 url 中添加 `"?human=true"` 弃用。它会显示一个四舍五入的人类可读时间值。

==== Scoring 改变

===== Query 标准化

Query 标准化已移除。这意味着 TF-IDF 相似性不再试图使得分在查询中具有可比性，同时 boosts 将作为简单乘法因子集成到得分中。

其他相似性不会受影响因为它们没有对分数进行标准化，并且已经将 boosts 作为乘法因子集成到得分中。

更多细节请参考 https://issues.apache.org/jira/browse/LUCENE-7347[`LUCENE-7347`] 。

===== 协调因子

协调因子已从评分公式移除。这意味着布尔查询不再根据 matching 子句的数量进行打分。
相反，它们总返回 matching 子句的总分。

因此，现在不鼓励使用 TF-IDF 相似性，因为这是这种相似性得分质量的重要组成部分。建议使用 BM25。

更多信息请参考 https://issues.apache.org/jira/browse/LUCENE-7347[`LUCENE-7347`] 。

==== `_uid` 上的 Fielddata

`_uid` 上的 Fielddata 已过期。
可以使用 `_id` 替换但是它没有过期的原因仅仅是因其用于 `random_score` 功能。
如果你真的需要访问排序文档、聚合或搜索脚本的 id，推荐方法是将 id 复制为文档字段。

==== 高亮

`unified` 是新的默认高亮选项。每个字段的偏移量策略都由高亮依赖的字段类型（ `index_options` ） 在内部选择。仍然可以强制 `fvh` 或 `plain` 高亮。

`postings` 高亮已从 Lucene 和 Elasticsearch 移除。在 `index_options` 设置为 `offsets` 时 `unified` 高亮输出相同的高亮。

==== `fielddata_fields`

弃用 `fielddata_fields` 已移除。请使用 `docvalue_fields` 替代。

==== `docvalue_fields`

在请求时 `docvalue_fields` 上限字段数为默认 100。
这个限制可以通过设置 `index.max_docvalue_fields_search` 覆盖。

==== `script_fields`

在请求时 `script_fields` 上限脚本字段值为 32。
这个限制可以通过设置 `index.max_script_fields` 覆盖。

==== Inner hits

内部匹配的 source 全路径与整个 source 相关。
在之前的版本中，source 字段名称与内部匹配相关。

==== Scroll

搜索请求体在开始 scroll 时不能再使用 `from` 参数。
这个参数在这些场景已忽略，现在将抛出错误。

==== top hits 和 inner hits 内的 from/size 限制

通过 inner hits 和 top hits 检索返回的最大结果数（ `from` + `size` ）限制为 100。这个限制可以通过 `index.max_inner_result_window` 设置。

==== Scroll 查询已弃用使用 request_cache

scroll（ 'scroll=1m` ）查询设置 `request_cache:true` 已过期且不再会使用内部缓存。
未来版本将返回 `400 - Bad request` 替代忽略提示。
Scroll 查询并不意味着被缓存。
