[[breaking_60_rest_changes]]
=== REST 改变

==== 无引号 JSON

早期 Elasticsearch 版本，JSON 文档允许包含无引号字段名。这个特性在 5.x 系列中已移除，但通过系统属性 `elasticsearch.json.allow_unquoted_field_names` 添加了
向后兼容层。这个向后兼容层已从 Elasticsearch 6.0 中移除。

==== JSON、 CBOR、 Yaml 和 Smile 中的重复键

早期 Elasticsearch 版本中，文档允许包含重复键。Elasticsearch 6.0.0 强制要求键必须唯一。这适用于所有内容类型：JSON、 CBOR、 Yaml 和 Smile

==== 自动检测 Content-Type

早期 Elasticsearch 版本中，没有对请求数据的 Content-Type 作强制要求。Elasticsearch 6.0.0 强制要求所有请求体必须具有支持的 Content-Type，并且此类型将会在解析数据时使用。

当使用 `source` 查询字符串参数时，`source_content_type` 参数必须指定 source 媒体类型。

==== 布尔 API 参数

所有 REST APIs 参数（请求参数和 JSON 体）支持提供布尔 "false" 作为 `false` 值和布尔 "true" 作为 `true` 值。所有其他值将产生一个错误。

==== 分析 API 改变

弃用的请求参数和请求体中的纯文本已移除。请在请求体中定义参数。

==== 在 Analyze API 中支持自定义 normalizer

Analyze API 可以分析 normalizer 和自定义 normalizer。
早期 Elasticsearch 版本中，Analyze API 需要 `tokenizer` 或者 `analyzer` 参数。
在 Elasticsearch 6.0.0 中，Analyze API 可以使用自定义 normalizer 或在设置了 `char_filter`/`filter` 且未设置 `tokenizer`/`analyzer` 时将 text 分析为 keyword 字段 。

==== 索引存在 API

不再接收 `ignore_unavailable` 和 `allow_no_indices` 选项，因为它们的值与默认值不同时可能造成不可预期的结果。

==== 索引请求中 `timestamp` 和 `ttl`

索引/更新 请求不再接收 `timestamp` 和 `ttl` 参数。

==== Refresh 请求一个或多个分片失败将用 HTTP 500 响应替代 200

Refresh 请求广播到多个分片时可能有一个或多个分片失败，现在在至少一个失败时将返回 500 响应而不是 200 响应。

==== Delete by Query API 需要显式查询

早期 Elasticsearch 中，可以接收不通过显式查询的 delete by query 请求，match_all 被用于默认查询并且所有文件将被删除。
从 6.0.0 版本开始，delete by query 查询需要显示查询。

==== DELETE 文档调用现在隐式创建类型

现在执行 `DELETE index/type/id` 时如果不存在 `type` 将隐式创建一个默认 mapping。

==== 索引信息 APIs

早期可以用逗号分割多个类型请求执行 `GET /_aliases,_mappings` 或 `GET/myindex/_settings,_alias` 以获取一个或多个索引的多个类型信息。
这个用于获取多组信息的逗号分割已移除。`GET /_all` 可以用于获取所有索引别名、设置和 mappings。为了只获取索引的 mappings，
使用 `GET /myindex/_mappings` （或 `_aliases` ， 或 `_settings` ）。

==== 已知端点的错误 HTTP 请求动作现在将返回 405 响应

假设请求端点存在，但是一个错误 HTTP 动作（例如 POST 请求 `/myindex/_settings` ）现在返回 HTTP 405 响应而不是 404。
包含允许动作的 `Allow` 头会添加到 405 响应中。例如：

[source,text]
-------------------------------------------
$ curl -v -XPOST 'localhost:9200/my_index/_settings'
*   Trying 127.0.0.1...
* TCP_NODELAY set
* Connected to localhost (127.0.0.1) port 9200 (#0)
> POST /my_index/_settings HTTP/1.1
> Host: localhost:9200
> User-Agent: curl/7.51.0
> Accept: */*
>
< HTTP/1.1 405 Method Not Allowed
< Allow: PUT,GET
< content-type: application/json; charset=UTF-8
< content-length: 134
<
{
  "error" : "Incorrect HTTP method for uri [/my_index/_settings] and method [POST], allowed: [PUT, GET]",
  "status" : 405
}
* Curl_http_done: called premature == 0
* Connection #0 to host localhost left intact
--------------------------------------------

==== 禁止使用 `_cache` 和 `_cache_key`

`_cache` 和 `_cache_key` 选项从 2.0.0 版本起已弃用且被忽略，并发出弃用警告。这些选项现在已全部移除，所以使用时会抛出错误。

==== IndexClosedException 返回 400 状态码

在已关闭的索引上调用不支持的 api （例如 search）且 `ignore_unavailable` 为 `false` 将返回 `IndexClosedException` 。
在这种场景下响应状态码从 `403` 变更为 `400`
