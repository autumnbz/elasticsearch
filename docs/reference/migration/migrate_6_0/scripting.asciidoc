[[breaking_60_scripting_changes]]
=== Scripting 改变

==== 移除 Groovy、 JavaScript 和 Python 语言

Groovy、 JavaScript 和 Python scripting 语言在 5.0 中已弃用，现已移除。请使用 painless 替代。

==== 移除本地 scripts

本地 scripts 已移除。请使用 <<modules-scripting-engine, implement a `ScriptEngine`>> 替换。

==== Date 字段返回 dates

`doc.some_date_field.value` 现在返回 ++ReadableDateTime++s 而不是从 epoch 算的 `long` 毫秒值。
`doc.some_date_field[some_number]` 也是如此。 如果需要可使用 `doc.some_date_field.value.millis` 获取 epoch 毫秒值。

==== 通过 `_index` 变量对内部索引访问已移除

`_index` 变量已移除。如果你使用它进行高级打分，请考虑写一个 `Similarity` 插件。

==== Script 设置

所有存在的 scripting 安全设置已移除。它们已由 `script.allowed_types` 和 `script.allowed_contexts` 替代。

==== 使用存储脚本作为请求的一部分时不能再指定 `lang`

使用存储脚本作为请求的一部分时不能再指定 `lang` ，否则会发生错误。注意请求时使用存储脚本与请求时放置存储脚本是不一样的。
脚本语言已被储存为集群状态的一部分，并且 `id` 足够访问所有执行存储脚本所需的信息。

==== putting、 getting 和 deleting 存储脚本时不能再指定 `lang`

Stored 脚本在 `_scripts/` 路径上执行 PUT、 GET 和 DELETE 动作时无法指定 `lang` 参数作为 url 的一部分。
所有存储脚本必须有一个唯一命名 `id` ，现在只有 `id` 而不再是 `lang` 和 `id` 。

==== 存储的搜索模板 apis 已移除

PUT、 GET 和 DELETE `_search/template` apis 已移除。请使用存储脚本 apis 存储搜索模板替换。

例如，早期可能以如下方式存储搜索模板：

[source,js]
--------------------------------------------------
PUT /_search/template/custom_template
{
  "query": {
    "match": {
      "f1": "{{f1}}"
    }
  }
}
--------------------------------------------------
// NOTCONSOLE

现在可用以下方式替换：

[source,js]
--------------------------------------------------
PUT /_scripts/custom_template
{
  "script": {
    "lang": "mustache",
    "source": {
      "query": {
        "match": {
          "f1": "{{f1}}"
        }
      }
    }
  }
}
--------------------------------------------------
// CONSOLE
